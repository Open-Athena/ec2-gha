name: Demo – multiple jobs on one EC2 instance, in sequence
# Tests that multiple jobs can run sequentially on the same EC2 instance
on:
  workflow_dispatch:
    inputs:
      sleep:
        description: "Sleep this many seconds at the end of the `prepare`, `train`, and `eval` jobs (optional, for SSH access and debugging)"
        required: false
        type: number
        default: 0
  workflow_call:   # Tested by `demos.yml`
    inputs:
      sleep:
        required: false
        type: number
        default: 0

permissions:
  id-token: write
  contents: read

jobs:
  ec2:
    uses: ./.github/workflows/runner.yml
    secrets: inherit
    with:
      ec2_image_id: ami-0e86e20dae9224db8  # Ubuntu 24.04 LTS x86_64 (us-east-1)

  prepare:
    needs: ec2
    runs-on: ${{ needs.ec2.outputs.id }}
    outputs:
      gpu-uuid: ${{ steps.gpu-info.outputs.uuid }}
    steps:
      - name: Get GPU info
        id: gpu-info
        run: |
          echo "=== Preparing GPU environment ==="
          nvidia-smi
          uuid=$(nvidia-smi --query-gpu=gpu_uuid --format=csv,noheader)
          echo "uuid=$uuid" >> $GITHUB_OUTPUT
          echo "GPU UUID: $uuid"

      - name: Sleep (${{ inputs.sleep }}s)
        if: ${{ inputs.sleep > 0 }}
        run: sleep ${{ inputs.sleep }}

  train:
    needs: [ec2, prepare]
    runs-on: ${{ needs.ec2.outputs.id }}
    steps:
      - name: Verify same GPU
        run: |
          echo "=== Training model on GPU ==="
          current_uuid=$(nvidia-smi --query-gpu=gpu_uuid --format=csv,noheader)
          if [[ "$current_uuid" == "${{ needs.prepare.outputs.gpu-uuid }}" ]]; then
            echo "✅ Confirmed: Using same GPU as preparation job"
          else
            echo "❌ ERROR: Different GPU!"
            exit 1
          fi

      - name: Sleep (${{ inputs.sleep }}s)
        if: ${{ inputs.sleep > 0 }}
        run: sleep ${{ inputs.sleep }}

  eval:
    needs: [ec2, train]
    runs-on: ${{ needs.ec2.outputs.id }}
    steps:
      - name: Final validation
        run: |
          echo "=== Evaluation complete ==="
          nvidia-smi

      - name: Sleep (${{ inputs.sleep }}s)
        if: ${{ inputs.sleep > 0 }}
        run: sleep ${{ inputs.sleep }}
